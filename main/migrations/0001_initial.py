# Generated by Django 4.2.9 on 2024-01-24 15:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FundingBody',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('affiliation', models.CharField(blank=True, help_text='if applicable: umbrella organization', max_length=255, null=True)),
                ('street', models.CharField(max_length=50)),
                ('postcode', models.CharField(max_length=10)),
                ('city', models.CharField(max_length=50)),
                ('telephone', models.CharField(help_text='e.g. administration office', max_length=50)),
                ('email', models.EmailField(help_text='e.g. administration office', max_length=254)),
                ('date_registered', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('method_file', models.FileField(upload_to='method_files', verbose_name='path to method files')),
                ('date_registered', models.DateTimeField(auto_now_add=True)),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='methods', to='main.institute')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(max_length=50)),
                ('funding_number', models.CharField(max_length=50)),
                ('funding_period_start', models.DateField()),
                ('funding_period_end', models.DateField()),
                ('project_file', models.FileField(blank=True, null=True, upload_to='project_files', verbose_name='path to project files')),
                ('date_registered', models.DateTimeField(auto_now_add=True)),
                ('funding_body', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.fundingbody')),
            ],
        ),
        migrations.CreateModel(
            name='SampleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telephone', models.CharField(max_length=50)),
                ('active', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=False, help_text='employment status')),
                ('date_registered', models.DateTimeField(auto_now_add=True)),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='staff_members', to='main.institute')),
            ],
            options={
                'verbose_name_plural': 'Staff',
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('sample_id', models.CharField(help_text='a unique 20-character identifier for the sample', max_length=20, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(20)])),
                ('name', models.CharField(help_text='free text field', max_length=255)),
                ('date_created', models.DateField(help_text='date of creation, rarely: delivery')),
                ('sample_info', models.FileField(help_text='link to sample type-specific information', upload_to='sample_info', verbose_name='sample information file')),
                ('supplementary_file', models.FileField(blank=True, help_text='if applicable: datasheet, etc.', null=True, upload_to='supplementary_files', verbose_name='supplementary file path')),
                ('date_registered', models.DateTimeField(auto_now_add=True)),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='samples', to='main.institute')),
                ('method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='samples', to='main.method')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='main.sample')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='samples', to='main.project')),
                ('sample_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='samples', to='main.sampletype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='free text field', max_length=255)),
                ('date_created', models.DateField(help_text='when was the data created')),
                ('experiment_file', models.FileField(upload_to='experiment_files', verbose_name='experimental data file path')),
                ('date_registered', models.DateTimeField(auto_now_add=True)),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='experiments', to='main.method')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='experiments', to='main.project')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='experiments', to='main.sample')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='experiments', to='main.staff')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='institute',
            field=models.ManyToManyField(to='main.institute'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
